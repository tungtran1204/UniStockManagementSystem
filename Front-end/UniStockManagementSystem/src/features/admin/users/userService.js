import axios from "axios";

const API_URL = "http://localhost:8080/api/unistock/admin/users"; // ‚úÖ API cho User Management

// ‚úÖ H√†m ƒë·ªÉ l·∫•y Token t·ª´ LocalStorage
const authHeader = () => {
  const token = localStorage.getItem("token");
  return token ? { Authorization: `Bearer ${token}` } : {}; // ‚úÖ N·∫øu kh√¥ng c√≥ token, tr·∫£ v·ªÅ object r·ªóng
};

// üü¢ **L·∫•y danh s√°ch Users**
export const getUsers = async () => {
  try {
    const response = await axios.get(API_URL, { headers: authHeader() });
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y danh s√°ch Users:", error);
    throw error;
  }
};

// üî¥ **X√≥a user theo ID**
export const deleteUserById = async (userId) => {
  try {
    await axios.delete(`${API_URL}/${userId}`, { headers: authHeader() });
  } catch (error) {
    console.error("‚ùå L·ªói khi x√≥a User:", error);
    throw error;
  }
};

// üîÑ **Toggle tr·∫°ng th√°i `isActive` c·ªßa User**
export const toggleUserStatus = async (userId, newStatus) => {
  try {
    const response = await axios.patch(
      `${API_URL}/${userId}/status`,
      { isActive: newStatus }, // ‚úÖ G·ª≠i tr·∫°ng th√°i m·ªõi
      { headers: authHeader() }
    );
    console.log("‚úÖ API Response:", response.data); // Debug API
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:", error);
    throw error;
  }
};
