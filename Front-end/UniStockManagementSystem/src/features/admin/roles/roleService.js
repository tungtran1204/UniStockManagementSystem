import axios from "axios";

const API_URL = "http://localhost:8080/api/unistock/admin/roles"; // ‚úÖ API cho Role Management

// ‚úÖ H√†m ƒë·ªÉ l·∫•y Token t·ª´ LocalStorage
const authHeader = () => {
  const token = localStorage.getItem("token");
  return token ? { Authorization: `Bearer ${token}` } : {}; // ‚úÖ N·∫øu kh√¥ng c√≥ token, tr·∫£ v·ªÅ object r·ªóng
};

// üü¢ **L·∫•y danh s√°ch Vai Tr√≤**
export const getAllRoles = async () => {
  try {
    const response = await axios.get(API_URL, { headers: authHeader() });
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y danh s√°ch Vai Tr√≤:", error);
    throw error;
  }
};

// üü¢ **Th√™m Vai Tr√≤ m·ªõi**
export const addRole = async (role) => {
  try {
    const response = await axios.post(API_URL, role, { headers: authHeader() });
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi th√™m Vai Tr√≤:", error);
    throw error;
  }
};

// üü¢ **C·∫≠p nh·∫≠t Vai Tr√≤**
export const updateRole = async (id, updatedRole) => {
  try {
    const response = await axios.put(`${API_URL}/${id}`, updatedRole, {
      headers: authHeader(),
    });
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t Vai Tr√≤:", error);
    throw error;
  }
};

// üîÑ **Toggle tr·∫°ng th√°i `isActive` c·ªßa Vai Tr√≤**
export const toggleRoleStatus = async (id, newStatus) => {
  try {
    const response = await axios.patch(
      `${API_URL}/${id}/status`,
      { active: newStatus },
      { headers: authHeader() }
    );
    console.log("‚úÖ API Response:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i Vai Tr√≤:", error);
    throw error;
  }
};

// üî¥ **X√≥a Vai Tr√≤ theo ID**
export const deleteRole = async (id) => {
  try {
    await axios.delete(`${API_URL}/${id}`, { headers: authHeader() });
  } catch (error) {
    console.error("‚ùå L·ªói khi x√≥a Vai Tr√≤:", error);
    throw error;
  }
};
