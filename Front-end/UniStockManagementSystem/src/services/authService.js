import axios from "axios";
import { jwtDecode } from "jwt-decode"; // üî• ƒê·ªïi t·ª´ `import jwtDecode from "jwt-decode";`

const API_URL = "https://api.example.com/auth"; // C·∫≠p nh·∫≠t URL API th·ª±c t·∫ø

// ƒêƒÉng nh·∫≠p, nh·∫≠n token v√† l∆∞u v√†o LocalStorage
export const login = async (credentials) => {
  try {
    const response = await axios.post(`${API_URL}/login`, credentials);
    const { token } = response.data;

    if (token) {
      localStorage.setItem("token", token);
      return jwtDecode(token); // Gi·∫£i m√£ token ƒë·ªÉ l·∫•y th√¥ng tin user
    }

    throw new Error("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!");
  } catch (error) {
    console.error("L·ªói ƒëƒÉng nh·∫≠p:", error);
    throw error;
  }
};

// ƒêƒÉng xu·∫•t, x√≥a token kh·ªèi LocalStorage
export const logout = () => {
  localStorage.removeItem("token");
};

// L·∫•y th√¥ng tin user t·ª´ token
export const getUser = () => {
  const token = localStorage.getItem("token");
  return token ? jwtDecode(token) : null;
};

// Ki·ªÉm tra user c√≥ ƒëƒÉng nh·∫≠p hay kh√¥ng
export const isAuthenticated = () => {
  const token = localStorage.getItem("token");
  if (!token) return false;

  try {
    const decoded = jwtDecode(token);
    return decoded.exp * 1000 > Date.now(); // Ki·ªÉm tra token h·∫øt h·∫°n ch∆∞a
  } catch (error) {
    return false;
  }
};
